openapi: 3.0.1
info:
  contact:
    email: office@walt.id
    name: walt.id
    url: https://walt.id
  description: The walt.id public API documentation
  title: walt.id Signatory API
  version: 1.1-SNAPSHOT
externalDocs:
  description: walt.id Docs
  url: https://docs.walt.id
servers:
- url: https://signatory.ssikit.walt.id/
paths:
  /api-routes:
    get:
      operationId: getApiRoutes
      responses:
        "200":
          description: Default response
      summary: Get apiRoutes
  /health:
    get:
      operationId: health
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Returns HTTP 200 in case all services are up and running
  /v1/credentials/issue:
    post:
      operationId: issue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Issue a credential
      tags:
      - Credentials
  /v1/templates:
    get:
      operationId: listTemplates
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: List VC templates
      tags:
      - Verifiable Credentials
  /v1/templates/{id}:
    get:
      operationId: loadTemplate
      parameters:
      - description: Retrieves a single VC template form the data store
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Load a VC template
      tags:
      - Verifiable Credentials
components:
  schemas:
    IssueCredentialRequest:
      example:
        templateId: templateId
        config:
          validDate: 2000-01-23T04:56:07.000+00:00
          dataProviderIdentifier: dataProviderIdentifier
          proofType: JWT
          verifierDid: verifierDid
          nonce: nonce
          issuerDid: issuerDid
          issuerVerificationMethod: issuerVerificationMethod
          domain: domain
          credentialId: credentialId
          proofPurpose: proofPurpose
          issueDate: 2000-01-23T04:56:07.000+00:00
          subjectDid: subjectDid
          expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        templateId:
          type: string
        config:
          $ref: '#/components/schemas/ProofConfig'
      required:
      - config
      - templateId
      type: object
    ProofConfig:
      example:
        validDate: 2000-01-23T04:56:07.000+00:00
        dataProviderIdentifier: dataProviderIdentifier
        proofType: JWT
        verifierDid: verifierDid
        nonce: nonce
        issuerDid: issuerDid
        issuerVerificationMethod: issuerVerificationMethod
        domain: domain
        credentialId: credentialId
        proofPurpose: proofPurpose
        issueDate: 2000-01-23T04:56:07.000+00:00
        subjectDid: subjectDid
        expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        issuerDid:
          type: string
        subjectDid:
          type: string
        verifierDid:
          type: string
        issuerVerificationMethod:
          type: string
        proofType:
          enum:
          - JWT
          - LD_PROOF
          type: string
        domain:
          type: string
        nonce:
          type: string
        proofPurpose:
          type: string
        credentialId:
          type: string
        issueDate:
          format: date-time
          type: string
        validDate:
          format: date-time
          type: string
        expirationDate:
          format: date-time
          type: string
        dataProviderIdentifier:
          type: string
      required:
      - issuerDid
      - proofType
      type: object
  securitySchemes:
    http:
      bearerFormat: JWT
      description: HTTP Bearer Token authentication
      in: header
      name: bearerAuth
      scheme: bearer
      type: http
