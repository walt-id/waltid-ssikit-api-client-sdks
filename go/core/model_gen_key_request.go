/*
walt.id Core API

The walt.id public API documentation

API version: 1.1-SNAPSHOT
Contact: office@walt.id
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GenKeyRequest struct for GenKeyRequest
type GenKeyRequest struct {
	KeyAlgorithm string `json:"keyAlgorithm"`
}

// NewGenKeyRequest instantiates a new GenKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenKeyRequest(keyAlgorithm string) *GenKeyRequest {
	this := GenKeyRequest{}
	this.KeyAlgorithm = keyAlgorithm
	return &this
}

// NewGenKeyRequestWithDefaults instantiates a new GenKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenKeyRequestWithDefaults() *GenKeyRequest {
	this := GenKeyRequest{}
	return &this
}

// GetKeyAlgorithm returns the KeyAlgorithm field value
func (o *GenKeyRequest) GetKeyAlgorithm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyAlgorithm
}

// GetKeyAlgorithmOk returns a tuple with the KeyAlgorithm field value
// and a boolean to check if the value has been set.
func (o *GenKeyRequest) GetKeyAlgorithmOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeyAlgorithm, true
}

// SetKeyAlgorithm sets field value
func (o *GenKeyRequest) SetKeyAlgorithm(v string) {
	o.KeyAlgorithm = v
}

func (o GenKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["keyAlgorithm"] = o.KeyAlgorithm
	}
	return json.Marshal(toSerialize)
}

type NullableGenKeyRequest struct {
	value *GenKeyRequest
	isSet bool
}

func (v NullableGenKeyRequest) Get() *GenKeyRequest {
	return v.value
}

func (v *NullableGenKeyRequest) Set(val *GenKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGenKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGenKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenKeyRequest(val *GenKeyRequest) *NullableGenKeyRequest {
	return &NullableGenKeyRequest{value: val, isSet: true}
}

func (v NullableGenKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


