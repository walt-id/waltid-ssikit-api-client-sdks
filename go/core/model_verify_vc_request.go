/*
walt.id Core API

The walt.id public API documentation

API version: 1.1-SNAPSHOT
Contact: office@walt.id
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VerifyVcRequest struct for VerifyVcRequest
type VerifyVcRequest struct {
	VcOrVp string `json:"vcOrVp"`
}

// NewVerifyVcRequest instantiates a new VerifyVcRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyVcRequest(vcOrVp string) *VerifyVcRequest {
	this := VerifyVcRequest{}
	this.VcOrVp = vcOrVp
	return &this
}

// NewVerifyVcRequestWithDefaults instantiates a new VerifyVcRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyVcRequestWithDefaults() *VerifyVcRequest {
	this := VerifyVcRequest{}
	return &this
}

// GetVcOrVp returns the VcOrVp field value
func (o *VerifyVcRequest) GetVcOrVp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VcOrVp
}

// GetVcOrVpOk returns a tuple with the VcOrVp field value
// and a boolean to check if the value has been set.
func (o *VerifyVcRequest) GetVcOrVpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VcOrVp, true
}

// SetVcOrVp sets field value
func (o *VerifyVcRequest) SetVcOrVp(v string) {
	o.VcOrVp = v
}

func (o VerifyVcRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["vcOrVp"] = o.VcOrVp
	}
	return json.Marshal(toSerialize)
}

type NullableVerifyVcRequest struct {
	value *VerifyVcRequest
	isSet bool
}

func (v NullableVerifyVcRequest) Get() *VerifyVcRequest {
	return v.value
}

func (v *NullableVerifyVcRequest) Set(val *VerifyVcRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyVcRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyVcRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyVcRequest(val *VerifyVcRequest) *NullableVerifyVcRequest {
	return &NullableVerifyVcRequest{value: val, isSet: true}
}

func (v NullableVerifyVcRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyVcRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


