/*
walt.id Core API

The walt.id public API documentation

API version: 1.1-SNAPSHOT
Contact: office@walt.id
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateVcRequest struct for CreateVcRequest
type CreateVcRequest struct {
	IssuerDid string `json:"issuerDid"`
	SubjectDid *string `json:"subjectDid,omitempty"`
	CredentialOffer *string `json:"credentialOffer,omitempty"`
	TemplateId *string `json:"templateId,omitempty"`
	Domain *string `json:"domain,omitempty"`
	Nonce *string `json:"nonce,omitempty"`
}

// NewCreateVcRequest instantiates a new CreateVcRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVcRequest(issuerDid string) *CreateVcRequest {
	this := CreateVcRequest{}
	this.IssuerDid = issuerDid
	return &this
}

// NewCreateVcRequestWithDefaults instantiates a new CreateVcRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVcRequestWithDefaults() *CreateVcRequest {
	this := CreateVcRequest{}
	return &this
}

// GetIssuerDid returns the IssuerDid field value
func (o *CreateVcRequest) GetIssuerDid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IssuerDid
}

// GetIssuerDidOk returns a tuple with the IssuerDid field value
// and a boolean to check if the value has been set.
func (o *CreateVcRequest) GetIssuerDidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IssuerDid, true
}

// SetIssuerDid sets field value
func (o *CreateVcRequest) SetIssuerDid(v string) {
	o.IssuerDid = v
}

// GetSubjectDid returns the SubjectDid field value if set, zero value otherwise.
func (o *CreateVcRequest) GetSubjectDid() string {
	if o == nil || o.SubjectDid == nil {
		var ret string
		return ret
	}
	return *o.SubjectDid
}

// GetSubjectDidOk returns a tuple with the SubjectDid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVcRequest) GetSubjectDidOk() (*string, bool) {
	if o == nil || o.SubjectDid == nil {
		return nil, false
	}
	return o.SubjectDid, true
}

// HasSubjectDid returns a boolean if a field has been set.
func (o *CreateVcRequest) HasSubjectDid() bool {
	if o != nil && o.SubjectDid != nil {
		return true
	}

	return false
}

// SetSubjectDid gets a reference to the given string and assigns it to the SubjectDid field.
func (o *CreateVcRequest) SetSubjectDid(v string) {
	o.SubjectDid = &v
}

// GetCredentialOffer returns the CredentialOffer field value if set, zero value otherwise.
func (o *CreateVcRequest) GetCredentialOffer() string {
	if o == nil || o.CredentialOffer == nil {
		var ret string
		return ret
	}
	return *o.CredentialOffer
}

// GetCredentialOfferOk returns a tuple with the CredentialOffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVcRequest) GetCredentialOfferOk() (*string, bool) {
	if o == nil || o.CredentialOffer == nil {
		return nil, false
	}
	return o.CredentialOffer, true
}

// HasCredentialOffer returns a boolean if a field has been set.
func (o *CreateVcRequest) HasCredentialOffer() bool {
	if o != nil && o.CredentialOffer != nil {
		return true
	}

	return false
}

// SetCredentialOffer gets a reference to the given string and assigns it to the CredentialOffer field.
func (o *CreateVcRequest) SetCredentialOffer(v string) {
	o.CredentialOffer = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *CreateVcRequest) GetTemplateId() string {
	if o == nil || o.TemplateId == nil {
		var ret string
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVcRequest) GetTemplateIdOk() (*string, bool) {
	if o == nil || o.TemplateId == nil {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *CreateVcRequest) HasTemplateId() bool {
	if o != nil && o.TemplateId != nil {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given string and assigns it to the TemplateId field.
func (o *CreateVcRequest) SetTemplateId(v string) {
	o.TemplateId = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *CreateVcRequest) GetDomain() string {
	if o == nil || o.Domain == nil {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVcRequest) GetDomainOk() (*string, bool) {
	if o == nil || o.Domain == nil {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *CreateVcRequest) HasDomain() bool {
	if o != nil && o.Domain != nil {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *CreateVcRequest) SetDomain(v string) {
	o.Domain = &v
}

// GetNonce returns the Nonce field value if set, zero value otherwise.
func (o *CreateVcRequest) GetNonce() string {
	if o == nil || o.Nonce == nil {
		var ret string
		return ret
	}
	return *o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVcRequest) GetNonceOk() (*string, bool) {
	if o == nil || o.Nonce == nil {
		return nil, false
	}
	return o.Nonce, true
}

// HasNonce returns a boolean if a field has been set.
func (o *CreateVcRequest) HasNonce() bool {
	if o != nil && o.Nonce != nil {
		return true
	}

	return false
}

// SetNonce gets a reference to the given string and assigns it to the Nonce field.
func (o *CreateVcRequest) SetNonce(v string) {
	o.Nonce = &v
}

func (o CreateVcRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["issuerDid"] = o.IssuerDid
	}
	if o.SubjectDid != nil {
		toSerialize["subjectDid"] = o.SubjectDid
	}
	if o.CredentialOffer != nil {
		toSerialize["credentialOffer"] = o.CredentialOffer
	}
	if o.TemplateId != nil {
		toSerialize["templateId"] = o.TemplateId
	}
	if o.Domain != nil {
		toSerialize["domain"] = o.Domain
	}
	if o.Nonce != nil {
		toSerialize["nonce"] = o.Nonce
	}
	return json.Marshal(toSerialize)
}

type NullableCreateVcRequest struct {
	value *CreateVcRequest
	isSet bool
}

func (v NullableCreateVcRequest) Get() *CreateVcRequest {
	return v.value
}

func (v *NullableCreateVcRequest) Set(val *CreateVcRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVcRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVcRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVcRequest(val *CreateVcRequest) *NullableCreateVcRequest {
	return &NullableCreateVcRequest{value: val, isSet: true}
}

func (v NullableCreateVcRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVcRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


