/*
walt.id Core API

The walt.id public API documentation

API version: 1.1-SNAPSHOT
Contact: office@walt.id
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ExportKeyRequest struct for ExportKeyRequest
type ExportKeyRequest struct {
	KeyAlias string `json:"keyAlias"`
	Format string `json:"format"`
	ExportPrivate bool `json:"exportPrivate"`
}

// NewExportKeyRequest instantiates a new ExportKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportKeyRequest(keyAlias string, format string, exportPrivate bool) *ExportKeyRequest {
	this := ExportKeyRequest{}
	this.KeyAlias = keyAlias
	this.Format = format
	this.ExportPrivate = exportPrivate
	return &this
}

// NewExportKeyRequestWithDefaults instantiates a new ExportKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportKeyRequestWithDefaults() *ExportKeyRequest {
	this := ExportKeyRequest{}
	return &this
}

// GetKeyAlias returns the KeyAlias field value
func (o *ExportKeyRequest) GetKeyAlias() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyAlias
}

// GetKeyAliasOk returns a tuple with the KeyAlias field value
// and a boolean to check if the value has been set.
func (o *ExportKeyRequest) GetKeyAliasOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeyAlias, true
}

// SetKeyAlias sets field value
func (o *ExportKeyRequest) SetKeyAlias(v string) {
	o.KeyAlias = v
}

// GetFormat returns the Format field value
func (o *ExportKeyRequest) GetFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Format
}

// GetFormatOk returns a tuple with the Format field value
// and a boolean to check if the value has been set.
func (o *ExportKeyRequest) GetFormatOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Format, true
}

// SetFormat sets field value
func (o *ExportKeyRequest) SetFormat(v string) {
	o.Format = v
}

// GetExportPrivate returns the ExportPrivate field value
func (o *ExportKeyRequest) GetExportPrivate() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ExportPrivate
}

// GetExportPrivateOk returns a tuple with the ExportPrivate field value
// and a boolean to check if the value has been set.
func (o *ExportKeyRequest) GetExportPrivateOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ExportPrivate, true
}

// SetExportPrivate sets field value
func (o *ExportKeyRequest) SetExportPrivate(v bool) {
	o.ExportPrivate = v
}

func (o ExportKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["keyAlias"] = o.KeyAlias
	}
	if true {
		toSerialize["format"] = o.Format
	}
	if true {
		toSerialize["exportPrivate"] = o.ExportPrivate
	}
	return json.Marshal(toSerialize)
}

type NullableExportKeyRequest struct {
	value *ExportKeyRequest
	isSet bool
}

func (v NullableExportKeyRequest) Get() *ExportKeyRequest {
	return v.value
}

func (v *NullableExportKeyRequest) Set(val *ExportKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExportKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExportKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportKeyRequest(val *ExportKeyRequest) *NullableExportKeyRequest {
	return &NullableExportKeyRequest{value: val, isSet: true}
}

func (v NullableExportKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


