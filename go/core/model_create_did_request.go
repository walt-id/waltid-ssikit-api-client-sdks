/*
walt.id Core API

The walt.id public API documentation

API version: 1.1-SNAPSHOT
Contact: office@walt.id
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateDidRequest struct for CreateDidRequest
type CreateDidRequest struct {
	Method string `json:"method"`
	KeyAlias *string `json:"keyAlias,omitempty"`
}

// NewCreateDidRequest instantiates a new CreateDidRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDidRequest(method string) *CreateDidRequest {
	this := CreateDidRequest{}
	this.Method = method
	return &this
}

// NewCreateDidRequestWithDefaults instantiates a new CreateDidRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDidRequestWithDefaults() *CreateDidRequest {
	this := CreateDidRequest{}
	return &this
}

// GetMethod returns the Method field value
func (o *CreateDidRequest) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *CreateDidRequest) GetMethodOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *CreateDidRequest) SetMethod(v string) {
	o.Method = v
}

// GetKeyAlias returns the KeyAlias field value if set, zero value otherwise.
func (o *CreateDidRequest) GetKeyAlias() string {
	if o == nil || o.KeyAlias == nil {
		var ret string
		return ret
	}
	return *o.KeyAlias
}

// GetKeyAliasOk returns a tuple with the KeyAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDidRequest) GetKeyAliasOk() (*string, bool) {
	if o == nil || o.KeyAlias == nil {
		return nil, false
	}
	return o.KeyAlias, true
}

// HasKeyAlias returns a boolean if a field has been set.
func (o *CreateDidRequest) HasKeyAlias() bool {
	if o != nil && o.KeyAlias != nil {
		return true
	}

	return false
}

// SetKeyAlias gets a reference to the given string and assigns it to the KeyAlias field.
func (o *CreateDidRequest) SetKeyAlias(v string) {
	o.KeyAlias = &v
}

func (o CreateDidRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["method"] = o.Method
	}
	if o.KeyAlias != nil {
		toSerialize["keyAlias"] = o.KeyAlias
	}
	return json.Marshal(toSerialize)
}

type NullableCreateDidRequest struct {
	value *CreateDidRequest
	isSet bool
}

func (v NullableCreateDidRequest) Get() *CreateDidRequest {
	return v.value
}

func (v *NullableCreateDidRequest) Set(val *CreateDidRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDidRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDidRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDidRequest(val *CreateDidRequest) *NullableCreateDidRequest {
	return &NullableCreateDidRequest{value: val, isSet: true}
}

func (v NullableCreateDidRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDidRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


