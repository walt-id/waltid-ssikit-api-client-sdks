/**
 * walt.id ESSIF API
 * The walt.id public API documentation
 *
 * The version of the OpenAPI document: 1.1-SNAPSHOT
 * Contact: office@walt.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* ESSIFUserWallet service.
* @module api/ESSIFUserWalletApi
* @version 1.1-SNAPSHOT
*/
export default class ESSIFUserWalletApi {

    /**
    * Constructs a new ESSIFUserWalletApi. 
    * @alias module:api/ESSIFUserWalletApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createUserDid operation.
     * @callback module:api/ESSIFUserWalletApi~createUserDidCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates and registers DID on the EBSI Blockchain
     * @param {Object} opts Optional parameters
     * @param {String} opts.body Verifiable Authorization
     * @param {module:api/ESSIFUserWalletApi~createUserDidCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    createUserDid(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['text/plain'];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/test/user/wallet/createDid', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the didAuthResponse operation.
     * @callback module:api/ESSIFUserWalletApi~didAuthResponseCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates and sends the DID Auth Response message.
     * @param {Object} opts Optional parameters
     * @param {String} opts.body DID Auth Request
     * @param {module:api/ESSIFUserWalletApi~didAuthResponseCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    didAuthResponse(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['text/plain'];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/test/user/wallet/didAuthResponse', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the oidcAuthResponse operation.
     * @callback module:api/ESSIFUserWalletApi~oidcAuthResponseCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates a OIDC Auth Response message.
     * @param {Object} opts Optional parameters
     * @param {String} opts.body todo
     * @param {module:api/ESSIFUserWalletApi~oidcAuthResponseCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    oidcAuthResponse(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['text/plain'];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/test/user/wallet/oidcAuthResponse', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestAccessToken operation.
     * @callback module:api/ESSIFUserWalletApi~requestAccessTokenCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Runs the authentication-protocol and returns the JWT Access Token for accessing the protected EBSI services.
     * @param {Object} opts Optional parameters
     * @param {String} opts.body The Verifiable Authorization
     * @param {module:api/ESSIFUserWalletApi~requestAccessTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    requestAccessToken(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['text/plain'];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/test/user/wallet/requestAccessToken', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the validateDidAuthRequest operation.
     * @callback module:api/ESSIFUserWalletApi~validateDidAuthRequestCallback
     * @param {String} error Error message, if any.
     * @param {Boolean} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validates a DID Auth request.
     * @param {Object} opts Optional parameters
     * @param {String} opts.body DID Auth request
     * @param {module:api/ESSIFUserWalletApi~validateDidAuthRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Boolean}
     */
    validateDidAuthRequest(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['text/plain'];
      let accepts = ['application/json'];
      let returnType = 'Boolean';
      return this.apiClient.callApi(
        '/test/user/wallet/validateDidAuthRequest', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the vcAuthResponse operation.
     * @callback module:api/ESSIFUserWalletApi~vcAuthResponseCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates a VC Auth Response message.
     * @param {Object} opts Optional parameters
     * @param {String} opts.body VC Exchange Request
     * @param {module:api/ESSIFUserWalletApi~vcAuthResponseCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    vcAuthResponse(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['text/plain'];
      let accepts = ['application/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/test/user/wallet/vcAuthResponse', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
