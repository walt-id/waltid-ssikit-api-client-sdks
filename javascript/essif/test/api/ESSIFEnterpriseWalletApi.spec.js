/**
 * walt.id ESSIF API
 * The walt.id public API documentation
 *
 * The version of the OpenAPI document: 1.1-SNAPSHOT
 * Contact: office@walt.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WaltIdEssifApi);
  }
}(this, function(expect, WaltIdEssifApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WaltIdEssifApi.ESSIFEnterpriseWalletApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ESSIFEnterpriseWalletApi', function() {
    describe('createEnterpriseDid', function() {
      it('should call createEnterpriseDid successfully', function(done) {
        //uncomment below and update the code to test createEnterpriseDid
        //instance.createEnterpriseDid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('generateDidAuthRequest', function() {
      it('should call generateDidAuthRequest successfully', function(done) {
        //uncomment below and update the code to test generateDidAuthRequest
        //instance.generateDidAuthRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCredential', function() {
      it('should call getCredential successfully', function(done) {
        //uncomment below and update the code to test getCredential
        //instance.getCredential(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCredential_0', function() {
      it('should call getCredential_0 successfully', function(done) {
        //uncomment below and update the code to test getCredential_0
        //instance.getCredential_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVerifiableCredential', function() {
      it('should call getVerifiableCredential successfully', function(done) {
        //uncomment below and update the code to test getVerifiableCredential
        //instance.getVerifiableCredential(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('onboards', function() {
      it('should call onboards successfully', function(done) {
        //uncomment below and update the code to test onboards
        //instance.onboards(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestCredentialUri', function() {
      it('should call requestCredentialUri successfully', function(done) {
        //uncomment below and update the code to test requestCredentialUri
        //instance.requestCredentialUri(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestEnterpriseVerifiableCredential', function() {
      it('should call requestEnterpriseVerifiableCredential successfully', function(done) {
        //uncomment below and update the code to test requestEnterpriseVerifiableCredential
        //instance.requestEnterpriseVerifiableCredential(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestVerifiableAuthorization', function() {
      it('should call requestVerifiableAuthorization successfully', function(done) {
        //uncomment below and update the code to test requestVerifiableAuthorization
        //instance.requestVerifiableAuthorization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestVerifiableCredential', function() {
      it('should call requestVerifiableCredential successfully', function(done) {
        //uncomment below and update the code to test requestVerifiableCredential
        //instance.requestVerifiableCredential(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('signedChallenge', function() {
      it('should call signedChallenge successfully', function(done) {
        //uncomment below and update the code to test signedChallenge
        //instance.signedChallenge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('token', function() {
      it('should call token successfully', function(done) {
        //uncomment below and update the code to test token
        //instance.token(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('validateDidAuthResponse', function() {
      it('should call validateDidAuthResponse successfully', function(done) {
        //uncomment below and update the code to test validateDidAuthResponse
        //instance.validateDidAuthResponse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
