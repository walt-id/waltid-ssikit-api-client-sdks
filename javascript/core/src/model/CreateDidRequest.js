/**
 * walt.id Core API
 * The walt.id public API documentation
 *
 * The version of the OpenAPI document: 1.1-SNAPSHOT
 * Contact: office@walt.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateDidRequest model module.
 * @module model/CreateDidRequest
 * @version 1.1-SNAPSHOT
 */
class CreateDidRequest {
    /**
     * Constructs a new <code>CreateDidRequest</code>.
     * @alias module:model/CreateDidRequest
     * @param method {module:model/CreateDidRequest.MethodEnum} 
     */
    constructor(method) { 
        
        CreateDidRequest.initialize(this, method);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, method) { 
        obj['method'] = method;
    }

    /**
     * Constructs a <code>CreateDidRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDidRequest} obj Optional instance to populate.
     * @return {module:model/CreateDidRequest} The populated <code>CreateDidRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDidRequest();

            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('keyAlias')) {
                obj['keyAlias'] = ApiClient.convertToType(data['keyAlias'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/CreateDidRequest.MethodEnum} method
 */
CreateDidRequest.prototype['method'] = undefined;

/**
 * @member {String} keyAlias
 */
CreateDidRequest.prototype['keyAlias'] = undefined;





/**
 * Allowed values for the <code>method</code> property.
 * @enum {String}
 * @readonly
 */
CreateDidRequest['MethodEnum'] = {

    /**
     * value: "key"
     * @const
     */
    "key": "key",

    /**
     * value: "web"
     * @const
     */
    "web": "web",

    /**
     * value: "ebsi"
     * @const
     */
    "ebsi": "ebsi"
};



export default CreateDidRequest;

