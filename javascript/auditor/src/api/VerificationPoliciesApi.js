/**
 * walt.id Auditor API
 * The walt.id public API documentation
 *
 * The version of the OpenAPI document: 1.1-SNAPSHOT
 * Contact: office@walt.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import VerificationPolicy from '../model/VerificationPolicy';
import VerificationResult from '../model/VerificationResult';

/**
* VerificationPolicies service.
* @module api/VerificationPoliciesApi
* @version 1.1-SNAPSHOT
*/
export default class VerificationPoliciesApi {

    /**
    * Constructs a new VerificationPoliciesApi. 
    * @alias module:api/VerificationPoliciesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the listPolicies operation.
     * @callback module:api/VerificationPoliciesApi~listPoliciesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/VerificationPolicy>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List verification policies
     * @param {module:api/VerificationPoliciesApi~listPoliciesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/VerificationPolicy>}
     */
    listPolicies(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [VerificationPolicy];
      return this.apiClient.callApi(
        '/v1/policies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the verifyVP operation.
     * @callback module:api/VerificationPoliciesApi~verifyVPCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerificationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Verify a W3C VerifiableCredential or VerifiablePresentation
     * @param {Object} opts Optional parameters
     * @param {String} opts.policyList Optional comma-separated list for setting the policies to be verified.
     * @param {String} opts.body VC or VP to be verified
     * @param {module:api/VerificationPoliciesApi~verifyVPCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerificationResult}
     */
    verifyVP(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
        'policyList': opts['policyList']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['text/plain'];
      let accepts = ['application/json'];
      let returnType = VerificationResult;
      return this.apiClient.callApi(
        '/v1/verify', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
